CREATE DATABASE FERRETERIA;
GO

USE FERRETERIA;
GO

-- Tabla CLASIFICACION
CREATE TABLE DBO.CLASIFICACION
(
    IDTipo VARCHAR(10) NOT NULL,
    CLASIFICACION_DETALLE VARCHAR(30) NOT NULL,
    CONSTRAINT PK_IDTipo PRIMARY KEY (IDTipo)
);
GO

-- Insertar valores en CLASIFICACION
INSERT INTO DBO.CLASIFICACION (IDTipo, CLASIFICACION_DETALLE)
VALUES
    ('MAD', 'Maderas'),
    ('TOR', 'Tornillos'),
    ('CLA', 'Clavos'),
    ('CEM', 'Cemento'),
    ('ARE', 'Arena'),
    ('PIE', 'Piedra');
GO

-- Tabla INVENTARIO
CREATE TABLE DBO.INVENTARIO
(
    IDItem VARCHAR(10) NOT NULL,
    DETALLE_ITEM VARCHAR(30) NOT NULL,
    IDTipo VARCHAR(10) NOT NULL,
    PRECIO MONEY NOT NULL,
    UNIDADES_DISPONIBLES INT NOT NULL,
    DESCUENTO_APLICABLE INT NOT NULL,
    CONSTRAINT PK_IDItem PRIMARY KEY (IDItem),
    CONSTRAINT FK_IDTipo FOREIGN KEY (IDTipo) REFERENCES DBO.CLASIFICACION(IDTipo),
    CONSTRAINT CHK_UNIDADES_DISPONIBLES CHECK (UNIDADES_DISPONIBLES >= 0)
);
GO

-- Insertar valores en INVENTARIO
INSERT INTO DBO.INVENTARIO (IDItem, DETALLE_ITEM, IDTipo, PRECIO, UNIDADES_DISPONIBLES, DESCUENTO_APLICABLE)
VALUES
    ('MAD1', 'Regla 1x1', 'MAD', 2000, 1000, 15),
    ('MAD2', 'Regla 1x2', 'MAD', 2500, 700, 12),
    ('TOR1', 'Tornillo 1 pulgada', 'TOR', 20, 100000, 5),
    ('TOR2', 'Tornillo 2 pulgadas', 'TOR', 25, 100000, 5),
    ('CLA1', 'Clavo 1 pulgada', 'CLA', 20, 1300, 10);
GO

-- Tabla VENTA
CREATE TABLE DBO.VENTA
(
    IDVENTA INT IDENTITY(1,1) NOT NULL,
    NombreCliente VARCHAR(50) NOT NULL,
    IDItem VARCHAR(10) NOT NULL,
    CANTIDAD INT NOT NULL,
    SUBTOTAL MONEY NOT NULL,
    DESCUENTO MONEY NOT NULL,
    TOTAL MONEY NOT NULL,
    CONSTRAINT PK_IDVENTA PRIMARY KEY (IDVENTA),
    CONSTRAINT FK_IDItem FOREIGN KEY (IDItem) REFERENCES DBO.INVENTARIO(IDItem)
);
GO

--CREAR PROCEDIMIENTO PARA INSERTAR EN TABLA CLASIFICACIÓN
CREATE PROCEDURE DBO.SP_Insertar_Clasificacion
	@Codigo VARCHAR (10),
	@Detalle VARCHAR (30)
AS
	BEGIN
		INSERT INTO DBO.CLASIFICACION (IDTipo, CLASIFICACION_DETALLE)
		VALUES
		(@Codigo, @Detalle)
	END;
GO

--Ejecutar el SP
EXEC DBO.SP_Insertar_Clasificacion 'TAL', 'Taladros'
GO
--CONSULTAR DATOS
SELECT * FROM DBO.CLASIFICACION
GO

--CREAR PROCEDIMIENTO PARA INSERTAR EN TABLA INVENTARIO
CREATE PROCEDURE DBO.SP_Insertar_Inventario
	@IDItem VARCHAR(10),
    @DETALLE_ITEM VARCHAR(30),
    @IDTipo VARCHAR(10),
    @PRECIO MONEY,
    @UNIDADES_DISPONIBLES INT,
    @DESCUENTO_APLICABLE INT
AS
	BEGIN
		IF NOT EXISTS (SELECT 1 FROM DBO.INVENTARIO WHERE IDItem = @IDItem)
		BEGIN
			INSERT INTO DBO.INVENTARIO (IDItem,DETALLE_ITEM,IDTipo,PRECIO,UNIDADES_DISPONIBLES,DESCUENTO_APLICABLE)
			VALUES
				(@IDItem,@DETALLE_ITEM,@IDTipo,@PRECIO,@UNIDADES_DISPONIBLES, @DESCUENTO_APLICABLE)
		END
	END;
GO

--EJECUTAR EL SP
EXEC DBO.SP_Insertar_Inventario 'CLA2', 'Clavo 2 pulgadas', 'CLA', 25, 1500, 15
GO
--CONSULTAR DATOS
SELECT * FROM DBO.INVENTARIO
GO

--CREAR PROCEDIMIENTO PARA ACTUALIZAR UNIDADES EN EL INVENTARIO
CREATE PROCEDURE DBO.SP_Actualizar_Inventario
	@IDItem VARCHAR(10),
    @UNIDADES_DISPONIBLES INT
AS
	BEGIN
		IF EXISTS (SELECT 1 FROM DBO.INVENTARIO WHERE IDItem = @IDItem)
		BEGIN
			UPDATE DBO.INVENTARIO
				SET UNIDADES_DISPONIBLES = @UNIDADES_DISPONIBLES
				WHERE IDItem = @IDItem
		END
		ELSE
		BEGIN
			RAISERROR ('El Item no existe en el inventario, verifique el código', 16 , 1)
		END
	END;
GO

--EJECUTAR EL SP
--EJECUTAR CODIGO NO EXISTENTE
EXEC DBO.SP_Actualizar_Inventario 'CLA3',2000
GO
--EJECUTAR CODIGO EXISTENTE
EXEC DBO.SP_Actualizar_Inventario 'CLA2',2000
GO
SELECT * FROM DBO.INVENTARIO

--TRIGGERS

--CREAR TABLA PARA REGISTRAR EL HISTORIAL DE REGISTROS ELIMINADOS (BITÁCORA)
CREATE TABLE DBO.Historial_Eliminacion
(
	Cod_Historial INT IDENTITY (1,1) NOT NULL,
	Fecha_Eliminacion DATETIME NOT NULL,
	IDItem VARCHAR (10) NOT NULL,
	DETALLE_ITEM VARCHAR(30) NOT NULL,
	Usuario VARCHAR (50) NOT NULL
	CONSTRAINT PK_Cod_Historial PRIMARY KEY (Cod_Historial)
);
GO

--CREAR EL TRIGGER QUE GUARDA EL HISTORIAL
CREATE TRIGGER DBO.TR_Historial_Eliminacion
ON DBO.INVENTARIO FOR DELETE
AS
	DECLARE
	@Fecha_Eliminacion DATETIME,
	@IDItem VARCHAR (10),
	@DETALLE_ITEM VARCHAR(30),
	@Usuario VARCHAR (50);
	SELECT  @IDItem = IDItem, @DETALLE_ITEM = DETALLE_ITEM FROM deleted;

	BEGIN
		INSERT INTO Historial_Eliminacion
		VALUES
		(GETDATE(),
		@IDItem,
		@DETALLE_ITEM,
		USER)
	END;
GO

--EJECUTAR UN DELETE Y DISPARAR EL SP
SELECT * FROM DBO.INVENTARIO
SELECT * FROM  DBO.Historial_Eliminacion

DELETE FROM DBO.INVENTARIO
	WHERE IDItem = 'CLA2'
GO